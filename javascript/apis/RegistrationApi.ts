/* tslint:disable */
/* eslint-disable */
/**
 * Schnooty API
 * This is the Schnooty API. It is used by both our agent and web application to manage your monitors, agents, alerts, account settings and everything else
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@schnooty.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorList,
    ErrorListFromJSON,
    ErrorListToJSON,
    Registration,
    RegistrationFromJSON,
    RegistrationToJSON,
    RegistrationConfirmation,
    RegistrationConfirmationFromJSON,
    RegistrationConfirmationToJSON,
} from '../models';

export interface ConfirmRegistrationRequest {
    id: string;
    registrationConfirmation: RegistrationConfirmation;
}

export interface CreateRegistrationRequest {
    registration: Registration;
}

/**
 * 
 */
export class RegistrationApi extends runtime.BaseAPI {

    /**
     * Confirm registration of account.
     */
    async confirmRegistrationRaw(requestParameters: ConfirmRegistrationRequest): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling confirmRegistration.');
        }

        if (requestParameters.registrationConfirmation === null || requestParameters.registrationConfirmation === undefined) {
            throw new runtime.RequiredError('registrationConfirmation','Required parameter requestParameters.registrationConfirmation was null or undefined when calling confirmRegistration.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/registration/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RegistrationConfirmationToJSON(requestParameters.registrationConfirmation),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Confirm registration of account.
     */
    async confirmRegistration(requestParameters: ConfirmRegistrationRequest): Promise<void> {
        await this.confirmRegistrationRaw(requestParameters);
    }

    /**
     * This is the endpoint you will use to create an account. This will enable you to use the API. By submitting your email address, password, and a name for your account, you will be emailed a confirmation code. The confirmation code will be valid for 24 hours or less, and may only be used once. Note that this API will respond with a 200 response code even if your email address is in Open Monitor\'s system. This is for privacy reasons.
     * Register your email address and password.
     */
    async createRegistrationRaw(requestParameters: CreateRegistrationRequest): Promise<runtime.ApiResponse<Registration>> {
        if (requestParameters.registration === null || requestParameters.registration === undefined) {
            throw new runtime.RequiredError('registration','Required parameter requestParameters.registration was null or undefined when calling createRegistration.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/registration`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RegistrationToJSON(requestParameters.registration),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => RegistrationFromJSON(jsonValue));
    }

    /**
     * This is the endpoint you will use to create an account. This will enable you to use the API. By submitting your email address, password, and a name for your account, you will be emailed a confirmation code. The confirmation code will be valid for 24 hours or less, and may only be used once. Note that this API will respond with a 200 response code even if your email address is in Open Monitor\'s system. This is for privacy reasons.
     * Register your email address and password.
     */
    async createRegistration(requestParameters: CreateRegistrationRequest): Promise<Registration> {
        const response = await this.createRegistrationRaw(requestParameters);
        return await response.value();
    }

}
