/* tslint:disable */
/* eslint-disable */
/**
 * Open Monitors
 * This is the Open Monitors API. All operations that a user or an agent would want to complete, including signing up, are listed here.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@openmonitors.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Registration
 */
export interface Registration {
    /**
     * 
     * @type {string}
     * @memberof Registration
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof Registration
     */
    accountName: string;
    /**
     * 
     * @type {string}
     * @memberof Registration
     */
    challengeId: string;
    /**
     * 
     * @type {string}
     * @memberof Registration
     */
    challengeSolution: string;
    /**
     * 
     * @type {string}
     * @memberof Registration
     */
    emailAddress: string;
    /**
     * 
     * @type {string}
     * @memberof Registration
     */
    password: string;
}

export function RegistrationFromJSON(json: any): Registration {
    return RegistrationFromJSONTyped(json, false);
}

export function RegistrationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Registration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'accountName': json['accountName'],
        'challengeId': json['challengeId'],
        'challengeSolution': json['challengeSolution'],
        'emailAddress': json['emailAddress'],
        'password': json['password'],
    };
}

export function RegistrationToJSON(value?: Registration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountName': value.accountName,
        'challengeId': value.challengeId,
        'challengeSolution': value.challengeSolution,
        'emailAddress': value.emailAddress,
        'password': value.password,
    };
}


