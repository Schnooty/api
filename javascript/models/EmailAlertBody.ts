/* tslint:disable */
/* eslint-disable */
/**
 * Open Monitors
 * This is the Open Monitors API. All operations that a user or an agent would want to complete, including signing up, are listed here.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@openmonitors.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TlsMode,
    TlsModeFromJSON,
    TlsModeFromJSONTyped,
    TlsModeToJSON,
} from './';

/**
 * 
 * @export
 * @interface EmailAlertBody
 */
export interface EmailAlertBody {
    /**
     * 
     * @type {string}
     * @memberof EmailAlertBody
     */
    from?: string;
    /**
     * The addresses to which the alert email will be sent.
     * @type {Array<string>}
     * @memberof EmailAlertBody
     */
    recipients?: Array<string>;
    /**
     * Your SMTP server's hostname
     * @type {string}
     * @memberof EmailAlertBody
     */
    host?: string;
    /**
     * The port number for your SMTP server
     * @type {number}
     * @memberof EmailAlertBody
     */
    port?: number;
    /**
     * 
     * @type {TlsMode}
     * @memberof EmailAlertBody
     */
    tlsMode?: TlsMode;
    /**
     * 
     * @type {string}
     * @memberof EmailAlertBody
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof EmailAlertBody
     */
    password?: string;
}

export function EmailAlertBodyFromJSON(json: any): EmailAlertBody {
    return EmailAlertBodyFromJSONTyped(json, false);
}

export function EmailAlertBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailAlertBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'from': !exists(json, 'from') ? undefined : json['from'],
        'recipients': !exists(json, 'recipients') ? undefined : json['recipients'],
        'host': !exists(json, 'host') ? undefined : json['host'],
        'port': !exists(json, 'port') ? undefined : json['port'],
        'tlsMode': !exists(json, 'tlsMode') ? undefined : TlsModeFromJSON(json['tlsMode']),
        'username': !exists(json, 'username') ? undefined : json['username'],
        'password': !exists(json, 'password') ? undefined : json['password'],
    };
}

export function EmailAlertBodyToJSON(value?: EmailAlertBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'from': value.from,
        'recipients': value.recipients,
        'host': value.host,
        'port': value.port,
        'tlsMode': TlsModeToJSON(value.tlsMode),
        'username': value.username,
        'password': value.password,
    };
}


