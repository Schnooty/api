/* tslint:disable */
/* eslint-disable */
/**
 * Open Monitors
 * This is the Open Monitors API. All operations that a user or an agent would want to complete, including signing up, are listed here.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@openmonitors.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HttpHeader,
    HttpHeaderFromJSON,
    HttpHeaderFromJSONTyped,
    HttpHeaderToJSON,
} from './';

/**
 * 
 * @export
 * @interface HttpMonitorBody
 */
export interface HttpMonitorBody {
    /**
     * 
     * @type {string}
     * @memberof HttpMonitorBody
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof HttpMonitorBody
     */
    method?: string;
    /**
     * 
     * @type {Array<HttpHeader>}
     * @memberof HttpMonitorBody
     */
    headers?: Array<HttpHeader>;
    /**
     * 
     * @type {string}
     * @memberof HttpMonitorBody
     */
    body?: string;
}

export function HttpMonitorBodyFromJSON(json: any): HttpMonitorBody {
    return HttpMonitorBodyFromJSONTyped(json, false);
}

export function HttpMonitorBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): HttpMonitorBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : json['url'],
        'method': !exists(json, 'method') ? undefined : json['method'],
        'headers': !exists(json, 'headers') ? undefined : ((json['headers'] as Array<any>).map(HttpHeaderFromJSON)),
        'body': !exists(json, 'body') ? undefined : json['body'],
    };
}

export function HttpMonitorBodyToJSON(value?: HttpMonitorBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'method': value.method,
        'headers': value.headers === undefined ? undefined : ((value.headers as Array<any>).map(HttpHeaderToJSON)),
        'body': value.body,
    };
}


