/* tslint:disable */
/* eslint-disable */
/**
 * Open Monitors
 * This is the Open Monitors API. All operations that a user or an agent would want to complete, including signing up, are listed here.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@openmonitors.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Money,
    MoneyFromJSON,
    MoneyFromJSONTyped,
    MoneyToJSON,
    Product,
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './';

/**
 * 
 * @export
 * @interface Plan
 */
export interface Plan {
    /**
     * 
     * @type {string}
     * @memberof Plan
     */
    readonly id: string;
    /**
     * Description of what this plan is for, and what it offers.
     * @type {string}
     * @memberof Plan
     */
    name: string;
    /**
     * Description of what this plan is for, and what it offers.
     * @type {string}
     * @memberof Plan
     */
    description: string;
    /**
     * 
     * @type {Array<Product>}
     * @memberof Plan
     */
    products: Array<Product>;
    /**
     * 
     * @type {Money}
     * @memberof Plan
     */
    maximumPrice: Money;
}

export function PlanFromJSON(json: any): Plan {
    return PlanFromJSONTyped(json, false);
}

export function PlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): Plan {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'],
        'products': ((json['products'] as Array<any>).map(ProductFromJSON)),
        'maximumPrice': MoneyFromJSON(json['maximumPrice']),
    };
}

export function PlanToJSON(value?: Plan | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'products': ((value.products as Array<any>).map(ProductToJSON)),
        'maximumPrice': MoneyToJSON(value.maximumPrice),
    };
}


