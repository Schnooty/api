/* tslint:disable */
/* eslint-disable */
/**
 * Open Monitors
 * This is the Open Monitors API. All operations that a user or an agent would want to complete, including signing up, are listed here.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@openmonitors.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProcessMonitorBody
 */
export interface ProcessMonitorBody {
    /**
     * The name of the executable process to be monitored.
     * @type {string}
     * @memberof ProcessMonitorBody
     */
    executable?: string;
    /**
     * If true, the process(s) will be located by the full path of the executable e.g. /usr/bin/node
     * @type {boolean}
     * @memberof ProcessMonitorBody
     */
    isPathAbsolute?: boolean;
    /**
     * The minimum number of processes that match the executable.
     * @type {number}
     * @memberof ProcessMonitorBody
     */
    minimumCount?: number;
    /**
     * The maximum number of processes that match the executable. 
     * @type {number}
     * @memberof ProcessMonitorBody
     */
    maximumCount?: number;
    /**
     * 
     * @type {string}
     * @memberof ProcessMonitorBody
     */
    maximumRamIndividual?: string;
    /**
     * 
     * @type {string}
     * @memberof ProcessMonitorBody
     */
    maximumRamTotal?: string;
}

export function ProcessMonitorBodyFromJSON(json: any): ProcessMonitorBody {
    return ProcessMonitorBodyFromJSONTyped(json, false);
}

export function ProcessMonitorBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessMonitorBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'executable': !exists(json, 'executable') ? undefined : json['executable'],
        'isPathAbsolute': !exists(json, 'isPathAbsolute') ? undefined : json['isPathAbsolute'],
        'minimumCount': !exists(json, 'minimumCount') ? undefined : json['minimumCount'],
        'maximumCount': !exists(json, 'maximumCount') ? undefined : json['maximumCount'],
        'maximumRamIndividual': !exists(json, 'maximumRamIndividual') ? undefined : json['maximumRamIndividual'],
        'maximumRamTotal': !exists(json, 'maximumRamTotal') ? undefined : json['maximumRamTotal'],
    };
}

export function ProcessMonitorBodyToJSON(value?: ProcessMonitorBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'executable': value.executable,
        'isPathAbsolute': value.isPathAbsolute,
        'minimumCount': value.minimumCount,
        'maximumCount': value.maximumCount,
        'maximumRamIndividual': value.maximumRamIndividual,
        'maximumRamTotal': value.maximumRamTotal,
    };
}


