/* tslint:disable */
/* eslint-disable */
/**
 * Open Monitors
 * This is the Open Monitors API. All operations that a user or an agent would want to complete, including signing up, are listed here.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@openmonitors.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MonitorStatusIndicator,
    MonitorStatusIndicatorFromJSON,
    MonitorStatusIndicatorFromJSONTyped,
    MonitorStatusIndicatorToJSON,
    MonitorStatusLogEntry,
    MonitorStatusLogEntryFromJSON,
    MonitorStatusLogEntryFromJSONTyped,
    MonitorStatusLogEntryToJSON,
    MonitorStatusResult,
    MonitorStatusResultFromJSON,
    MonitorStatusResultFromJSONTyped,
    MonitorStatusResultToJSON,
} from './';

/**
 * 
 * @export
 * @interface MonitorStatus
 */
export interface MonitorStatus {
    /**
     * 
     * @type {string}
     * @memberof MonitorStatus
     */
    readonly monitorId: string;
    /**
     * 
     * @type {MonitorStatusIndicator}
     * @memberof MonitorStatus
     */
    status: MonitorStatusIndicator;
    /**
     * UTC UNIX timestamp in with fractional offset.
     * @type {Date}
     * @memberof MonitorStatus
     */
    readonly timestamp: Date;
    /**
     * 
     * @type {MonitorStatusResult}
     * @memberof MonitorStatus
     */
    lastResult: MonitorStatusResult;
    /**
     * 
     * @type {string}
     * @memberof MonitorStatus
     */
    description: string;
    /**
     * 
     * @type {Array<MonitorStatusLogEntry>}
     * @memberof MonitorStatus
     */
    log?: Array<MonitorStatusLogEntry>;
}

export function MonitorStatusFromJSON(json: any): MonitorStatus {
    return MonitorStatusFromJSONTyped(json, false);
}

export function MonitorStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonitorStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'monitorId': json['monitorId'],
        'status': MonitorStatusIndicatorFromJSON(json['status']),
        'timestamp': (new Date(json['timestamp'])),
        'lastResult': MonitorStatusResultFromJSON(json['lastResult']),
        'description': json['description'],
        'log': !exists(json, 'log') ? undefined : ((json['log'] as Array<any>).map(MonitorStatusLogEntryFromJSON)),
    };
}

export function MonitorStatusToJSON(value?: MonitorStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': MonitorStatusIndicatorToJSON(value.status),
        'lastResult': MonitorStatusResultToJSON(value.lastResult),
        'description': value.description,
        'log': value.log === undefined ? undefined : ((value.log as Array<any>).map(MonitorStatusLogEntryToJSON)),
    };
}


